<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.brightinteractive</groupId>
        <artifactId>bright-parent</artifactId>
        <version>1.2.0-SNAPSHOT</version>
    </parent>

    <groupId>com.brightinteractive</groupId>
    <artifactId>bright-webapp-parent</artifactId>
    <version>1.1.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>Bright Interactive Web Application Parent Project</name>
    <description>Parent for all Bright Interactive web application projects</description>
    <inceptionYear>2012</inceptionYear>

    <scm>
        <connection>scm:git:ssh://git@github.com/brightinteractive/bright-webapp-parent.git</connection>
    </scm>

    <properties>
        <!--
            jetty:run doesn't work with these versions of Jetty in Maven
            2.2.1 (see
            https://github.com/brightinteractive/bright-webapp-parent/issues/1)
        <jetty.version>8.0.4.v20111024</jetty.version>
        <jetty.version>7.5.4.v20111024</jetty.version>
        -->
        <jetty.version>7.4.5.v20110725</jetty.version>
        <tomcat7.plugin.version>2.2</tomcat7.plugin.version>
        <maven.failsafe.plugin.version>2.11</maven.failsafe.plugin.version>
        <maven.war.plugin.version>2.4</maven.war.plugin.version>
        <javax.servlet-api.version>3.0.1</javax.servlet-api.version>
        <jsp-api.version>2.1</jsp-api.version>
        <bright-spring.version>1.0.0-SNAPSHOT</bright-spring.version>
        <spring.test.version>4.0.6.RELEASE</spring.test.version>
    </properties>

    <build>
        <!--
            Shared build plugin configuration across Bright projects.
            I.e. Only configures plugins that are actually included within
            the plugins element of the child poms.

            None as of yet.

            <pluginManagement>
                <plugins>
                </plugins>
            </pluginManagement>
        -->

        <!--
            Build plugins used across across all Bright projects.  These plugins plus configuration will
            will be inherited by all child projects
        -->
        <plugins>
            <plugin>
                <!--
                    This plugin runs integration tests. By default it looks
                    for test classes with the following wildcard patterns:

                    **/IT*.java
                    **/*IT.java
                    **/*ITCase.java

                    (this is documented at
                    http://maven.apache.org/plugins/maven-failsafe-plugin/examples/inclusion-exclusion.html).
                -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven.failsafe.plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <!--
                        Don't write test reports to text files, write them to
                        the console instead. That way you get a stack trace
                        that is clickable in IntelliJ if a test fails.

                        Test reports are still written as XML to
                        target/surefire-reports/.
                    -->
                    <useFile>false</useFile>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <version>${maven.war.plugin.version}</version>
                <configuration>
                    <packagingExcludes>**/*-local.properties</packagingExcludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
                <version>${tomcat7.plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>${jetty.version}</version>
                <configuration>
                    <scanIntervalSeconds>5</scanIntervalSeconds>
                    <connectors>
                        <connector implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">
                            <port>8080</port>
                            <maxIdleTime>60000</maxIdleTime>
                        </connector>
                    </connectors>
                    <webAppConfig>
                        <contextPath>/</contextPath>
                    </webAppConfig>
                    <stopKey/>
                    <stopPort/>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>com.brightinteractive</groupId>
            <artifactId>bright-spring</artifactId>
            <version>${bright-spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.test.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>${javax.servlet-api.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet.jsp</groupId>
            <artifactId>jsp-api</artifactId>
            <version>${jsp-api.version}</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>
</project>
